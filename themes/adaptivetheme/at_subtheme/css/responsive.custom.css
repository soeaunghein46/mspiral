
#block-block-5, #block-block-6, #block-locale-language {
  display: inline-block;
  font-size: 1.2em;
  width: 230px;
  text-align: center;
}
#block-block-5, #block-block-6, #block-locale-language {
  display: inline-block;
  background-color:#ECECEB;
  margin-top:40px; 

}
.region.region-header {
  margin-left: 45%;
}

.language-switcher-locale-url li {
  display:inline-block;
}
#block-block-5 p , #block-block-6 p {
  margin-top:18px;

}
/*#block-system-main-menu ul li {
  display: inline-block;
  clear:both;
  float: left;
  width:180px;
  padding-left: 0px;
    padding-right:0px
    border: 1px;  
    background-color:#dfe6b6 ;
    height: 20px;
}
*/

#block-system-main-menu h2{
  display: none;
}
#primary-menu-bar{
  display: none;
}
#block-system-main-menu ul li .dropdown:hover.dropbtn {
  display: inline-block;
  text-align: center;
    width: 180px;
    padding-left: 20px;
    padding-right:20px
    border: 1px;  
    background-color:#F9ADA1;
    height: 50px;
    /*overflow: hidden;
    clear: both;*/
}
 #block-block-2, #block-block-3, #block-menu-menu-quick-links{
  display: inline-block;
  width:32%;
  text-align: center;
  margin-top:30px;
}
.view-funding-partner.panel-2col {
display: inline-block;
width: 33%
}

#footer {
  display: block;
  width:100%;
  background-color: #dfc3b0;
  text-align: right;
}

.view-all-events .views-row {
  display: inline-block;
  width: 33%;
  margin-top: 30px;
}
    /* background: #4e4e4e; */
   /* display: inline-block;
    border-radius: 3px;
    border-radius: 3px;
    border-radius: 3px;
    max-width: 1170px;
    margin: 0 auto;
    clear: both;
}*/

#block-system-main-menu{
  background-color:gray;

}

#block-systlem-main-menu ul {
  text-align:center;
  font-size: 2px;
}

/*
 * responsive.custom.css is for custom media queries that are not set via the
 * theme settings, such as cascading media queries.
 *
 * By default all the other responsive stylesheets used in Adaptivetheme use a
 * "stacking method", however cascading media queries use a waterfall method so
 * you can leverage the cascade and inheritance for all browsers that support
 * media queries, regardless of screen size.
 *
 * @SEE http://zomigi.com/blog/essential-considerations-for-crafting-quality-media-queries/#mq-overlap-stack
 *
 * NOTE: this file loads by default, to disable got to your theme settings and
 * look under the "CSS" settings tab.
 */
/*
 * Really small screens and up
 */
/* @media only screen and (min-width: 220px) {} */
/*
 * Smalltouch sizes and up
 */
/* @media only screen and (min-width: 320px) {} */
/*
 * Smalltouch sizes and down
 */
@media only screen and (max-width: 480px) {
  /* 
   * Float Region Blocks - custom media query CSS example:
   * 
   * Float regions blocks is an Extension you can enable in the appearance
   * settings for your theme. This feature allows you to automatically float
   * blocks in regions, you can switch it on and off depending on your
   * requirements. For design purposes you many want to remove the floats for
   * devices where the entire theme is just one column - for example small
   * mobile phones. The following CSS is inside the custom media query:
   *
   *   @media only screen and (max-width: 480px){}
   *
   * This will target devices with a maximum width of 480px - most small phones.
   * In these smaller screen sizes we can remove the float and widths so all
   * blocks stack instead of displaying horizonally. The selector used is an
   * "attribute selector" which will match on any float block class. Use your
   * inspector or Firebug to get the classes from the page output if you need
   * more granular control over block alignment and stacking.
   */
  /* line 57, ../sass/responsive.custom.scss */
  .region[class*="float-blocks"] .block {
    float: none;
    width: 100%;
  }
}
/*
 * Tablet sizes and up
 */
/* @media only screen and (min-width: 768px) {} */
/*
 * Desktops/laptops and up
 */
/* @media only screen and (min-width: 1025px) {} */

/*# sourceMappingURL=responsive.custom.css.map */
